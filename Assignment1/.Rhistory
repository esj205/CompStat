}
ll_result <- sapply(theta, llfunction, data=data)
plot(theta, ll_result, type='l', ylab='log likelihood', xlab=expression(theta))
rm(list=ls())
library(Rcpp)
library(RcppArmadillo)
library(rstudioapi)
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
sourceCpp("q2-1.cpp")
#######################
##Problem 2.1
#######################
###################
##Dataset 설정
data <- c(1.77, -0.23, 2.76, 3.8, 3.47, 56.75, -1.34, 4.24, -2.44, 3.29,
3.71, -2.4, 4.53, -0.07, -1.05, -13.87, -2.53, -1.75, 0.27, 43.21)
theta = seq(-50, 50, by=0.01)
optimize(function(theta) -sum(dcauchy(data, location=theta, log=TRUE)),  c(-50,50))
llfunction <- function(theta, data){
return(sum(dcauchy(data, theta, scale=1, log = TRUE)))
}
ll_result <- sapply(theta, llfunction, data=data)
plot(theta, ll_result, type='l', ylab='log likelihood', xlab=expression(theta))
install.packages('microbenchmark')
library(microbenchmark)
mircrobenchmark(newton(-1, 10e-8, data, max_iter = 1000))
microbenchmark(newton(-1, 10e-8, data, max_iter = 1000))
microbenchmark(bisec(-1,1,10e-8,data, max_iter = 1000))
microbenchmark(fixed(-5, 1, 10e-8, data, max_iter = 1000))
microbenchmark(secant(-3,3,10e-8, data, max_iter = 1000))
sourceCpp('q2-2.cpp')
llfunction2 <- function(theta, data){
return(sum(log((1-cos(x-par))/(2*pi))))
}
library(Rcpp)
library(RcppArmadillo)
library(rstudioapi)
library(microbenchmark)
#######################
##Problem 2.1
#######################
###################
##Dataset 설정
data2 = c(3.91,4.85,2.28,4.06,3.70,4.04,5.46,3.53,2.28,1.96,3.88,2.22,3.47,4.82,2.46,2.99,
2.54,0.52,2.50)
theta2 <- seq(from=-pi,to=pi,length.out = 1000)
sourceCpp('q2-2.cpp')
llfunction2 <- function(theta, data){
return(sum(log((1-cos(x-par))/(2*pi))))
}
ll_result2 <- sapply(theta2, llfunction2, data=data2)
llfunction2 <- function(theta, data){
return(sum(log((1-cos(data-theta))/(2*pi))))
}
ll_result2 <- sapply(theta2, llfunction2, data=data2)
plot(theta2, ll_result2, type='l', ylab='log likelihood', xlab=expression(theta))
theta[which.min(ll_result2)]
ll_result2
theta2[which.min(ll_result2)]
###################
##(c)MLE
theta2[which.max(ll_result2)]
sourceCpp('q2-2.cpp')
newton2(2.279935-0.0001, 10e-6, data, max_iter = 1000)
newton2(x=2.279935-0.0001, epsilon = 10e-6, data = data, max_iter = 10000)
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data, max_iter = 10000)
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data, max_iter = 1000)
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
#######################
##Problem 2.1
#######################
###################
##Dataset 설정
data2 = c(3.91,4.85,2.28,4.06,3.70,4.04,5.46,3.53,2.28,1.96,3.88,2.22,3.47,4.82,2.46,2.99,
2.54,0.52,2.50)
theta2 <- seq(from=-pi,to=pi,length.out = 1000)
sourceCpp('q2-2.cpp')
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
sourceCpp('q2-2.cpp')
gprime1(2.27, data2)
gprime2(2.27, data2)
sourceCpp('q2-2.cpp')
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
sourceCpp('q2-2.cpp')
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
#######################
##Problem 2.1
#######################
###################
##Dataset 설정
data2 = c(3.91,4.85,2.28,4.06,3.70,4.04,5.46,3.53,2.28,1.96,3.88,2.22,3.47,4.82,2.46,2.99,
2.54,0.52,2.50)
theta2 <- seq(from=-pi,to=pi,length.out = 1000)
sourceCpp('q2-2.cpp')
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
a = c(1,2,3)
b = c(4,5,6)
a*b
sourceCpp('q2-2.cpp')
gprime2(2.27, data2)
sourceCpp('q2-2.cpp')
sourceCpp('q2-2.cpp')
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
sourceCpp('q2-2.cpp')
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
newton2(x=2.279935+0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
###################
##(c)MLE
theta2[which.max(ll_result2)]
###################
##(a)Graph the plot
llfunction2 <- function(theta, data){
return(sum(log((1-cos(data-theta))/(2*pi))))
}
ll_result2 <- sapply(theta2, llfunction2, data=data2)
plot(theta2, ll_result2, type='l', ylab='log likelihood', xlab=expression(theta))
###################
##(c)MLE
theta2[which.max(ll_result2)]
###################
##(b)MoM Estimator
mom <- asin(pi-mean(data2))
newton2(mom, 10e-5, data2, max_iter = 1000)
newton2(mom, 10e-5, data2, max_iter = 10000)
newton2(-2.7, 10e-5, data2, max_iter= 1000)
newton2(2.7, 10e-5, data2, max_iter= 1000)
###################
##(d)local mode
theta3 <- seq(from=-pi, to=pi, length.out=200)
local mode <- newton2(theta3, 0.0001, data=data2, max_iter = 1000)
local_mode <- newton2(theta3, 0.0001, data=data2, max_iter = 1000)
local_mode <- c()
local_mode <- as.list(local_mode)
num=0
for (i in theta3){
num = num+1
newton.list[[num]] <- newton2(i, 10e-5, data2, max_iter=1000)
names(newton.list)[num] <- as.character(i)
}
for (i in theta3){
num = num+1
local_mode[[num]] <- newton2(i, 10e-5, data2, max_iter=1000)
names(local_mode)[num] <- as.character(i)
}
local_mode
newton2(3.14159265358979, 10e-5, data2, max_iter = 1000)
newton2(2.98372367602247, 10e-5, data2, max_iter = 1000)
newton2(3.01529747153593, 10e-5, data2, max_iter = 1000)
local_mode <- as.list(NA)
num=0
for (i in theta3){
num = num+1
local_mode[[num]] <- newton2(i, 10e-5, data2, max_iter=1000)
names(local_mode)[num] <- as.character(i)
}
local_mode
str(local_mode)
head(local_mode)
for (i in theta3){
num=num+1
local_mode[num]<-newton2(i, 10e-5, data2, max_iter = 1000)
}
local_mode <- c()
num=0
for (i in theta3){
num=num+1
local_mode[num]<-newton2(i, 10e-5, data2, max_iter = 1000)
}
head(local_mode)
local_mode.df <- cbind(theta3, local_mode)
View(local_mode.df)
unique(local_mode)
length(local_mode)
length(unique(local_mode))
unique(c(1,1,1,2,2,2,3,4,5,6))
local_mode <- c()
num=0
for (i in theta3){
num=num+1
local_mode[num]<-round(newton2(i, 10e-5, data2, max_iter = 1000),3)
}
local_mode.df <- cbind(theta3, local_mode)
length(unique(local_mode))
local_mode <- c()
num=0
for (i in theta3){
num=num+1
local_mode[num]<-round(newton2(i, 10e-5, data2, max_iter = 1000),5)
}
local_mode.df <- cbind(theta3, local_mode)
length(unique(local_mode))
View(local_mode.df)
rm(list=ls())
library(Rcpp)
library(RcppArmadillo)
library(rstudioapi)
library(microbenchmark)
sourceCpp("q2-1.cpp")
#######################
##Problem 2.1
#######################
###################
##Dataset 설정
data <- c(1.77, -0.23, 2.76, 3.8, 3.47, 56.75, -1.34, 4.24, -2.44, 3.29,
3.71, -2.4, 4.53, -0.07, -1.05, -13.87, -2.53, -1.75, 0.27, 43.21)
theta = seq(-50, 50, by=0.01)
optimize(function(theta) -sum(dcauchy(data, location=theta, log=TRUE)),  c(-50,50))
llfunction <- function(theta, data){
return(sum(dcauchy(data, theta, scale=1, log = TRUE)))
}
ll_result <- sapply(theta, llfunction, data=data)
plot(theta, ll_result, type='l', ylab='log likelihood', xlab=expression(theta))
newton_list <- c(-11, -1, 0, 1.5, 4, 4.7, 7, 8, 38)
for(i in newton_list){
print(newton(i, 0.0001, data))
}
for(i in newton_list){
print(newton(i, 0.0001, data, 10000))
}
bisec(-1,1,0.0001,data)
bisec(-10,-5,0.0001, data, 10)
bisec(-1,1,0.0001,data,, 10000)
bisec(-1,1,0.0001,data, 10000)
bisec(-10,-5,0.0001, data, 10000)
###################
##(c)fixed-point method
alpha_list <- c(1,0.64,0.25)
for(i in alpha_list){
print(fixed(-1, i, 0.0001, data))
}
for(i in alpha_list){
print(fixed(-1, i, 0.0001, data, 10000))
}
fixed(-5, 1, 0.0001, data, 10000)
library(microbenchmark)
microbenchmark(newton(-1, 10e-8, data, max_iter = 1000))
microbenchmark(bisec(-1,1,10e-8,data, max_iter = 1000))
microbenchmark(fixed(-5, 1, 10e-8, data, max_iter = 1000))
microbenchmark(secant(-3,3,10e-8, data, max_iter = 1000))
help('microbenchmark')
library(Rcpp)
library(RcppArmadillo)
library(rstudioapi)
library(microbenchmark)
sourceCpp("q2-1.cpp")
#######################
##Problem 2.1
#######################
###################
##Dataset 설정
data <- c(1.77, -0.23, 2.76, 3.8, 3.47, 56.75, -1.34, 4.24, -2.44, 3.29,
3.71, -2.4, 4.53, -0.07, -1.05, -13.87, -2.53, -1.75, 0.27, 43.21)
theta = seq(-50, 50, by=0.01)
optimize(function(theta) -sum(dcauchy(data, location=theta, log=TRUE)),  c(-50,50))
llfunction <- function(theta, data){
return(sum(dcauchy(data, theta, scale=1, log = TRUE)))
}
ll_result <- sapply(theta, llfunction, data=data)
plot(theta, ll_result, type='l', ylab='log likelihood', xlab=expression(theta))
theta[which.max(ll_result)]
newton_list <- c(-11, -1, 0, 1.5, 4, 4.7, 7, 8, 38)
for(i in newton_list){
print(newton(i, 0.0001, data, 10000))
}
newton(mean(data), 0.0001, data, 10000)
bisec(-1,1,0.0001,data, 10000)
bisec(-10,-5,0.0001, data, 10000)
###################
##(c)fixed-point method
alpha_list <- c(1,0.64,0.25)
for(i in alpha_list){
print(fixed(-1, i, 0.0001, data, 10000))
}
for(i in alpha_list){
print(fixed(-5, i, 0.0001, data, 10000))
}
###################
##(c)fixed-point method
alpha_list <- c(3,1,0.64,0.25,0.1)
for(i in alpha_list){
print(fixed(-1, i, 0.0001, data, 10000))
}
for(i in alpha_list){
print(fixed(-5, i, 0.0001, data, 10000))
}
for(i in alpha_list){
print(fixed(1, i, 0.0001, data, 10000))
}
for(i in alpha_list){
print(fixed(1, i, 0.0001, data, 10000))
}
for(i in alpha_list){
print(fixed(-1, i, 0.0001, data, 10000))
}
print(fixed(-5, i, 0.0001, data, 10000))
for(i in alpha_list){
print(fixed(-5, i, 0.0001, data, 10000))
}
###################
##(d)secant method
secant_0_list <- c(-1,-2,-3)
for(i in secant_0_list){
print(secant(i,-1,0.0001, data, 10000))
}
for(i in secant_0_list){
print(secant(i,1,0.0001, data, 10000))
}
for(i in secant_0_list){
print(secant(i,3,0.0001, data, 10000))
}
rnorm(20)
gprime <- NULL
for(i in 1:length(theta)){
gprime[i] <- sum(-2*(theta[i]-data)/((data-theta[i])^2+1))
}
library(ggplot2)
ggplot(data=gprime,aes(x=theta,y=gprime)) +
geom_line() +
geom_hline(yintercept=0,col="red",linetype="dashed") +
theme_bw() +
geom_vline(xintercept = initial,col="red",alpha=0.5)
gprime <- as.data.frame(gprime)
ggplot(data=gprime,aes(x=theta,y=gprime)) +
geom_line() +
geom_hline(yintercept=0,col="red",linetype="dashed") +
theme_bw() +
geom_vline(xintercept = initial,col="red",alpha=0.5)
View(gprime)
ggplot(data=gprime,aes(x=theta,y=gprime)) +
geom_line() +
geom_hline(yintercept=0,col="red",linetype="dashed") +
theme_bw()
gprime[gprime==0]
gprime==0
is.any(gprime==0)
any(gprime==0)
gprime$gprime
any(gprime$gprime==0)
View(gprime)
microbenchmark(newton(-1, 10e-8, data, max_iter = 1000))
microbenchmark(bisec(-1,1,10e-8,data, max_iter = 1000))
microbenchmark(fixed(-1, 0.64, 10e-8, data, max_iter = 1000))
microbenchmark(secant(-1,1,10e-8, data, max_iter = 1000))
#######################
##Problem 2.1
#######################
###################
##Dataset 설정
data2 = c(3.91,4.85,2.28,4.06,3.70,4.04,5.46,3.53,2.28,1.96,3.88,2.22,3.47,4.82,2.46,2.99,
2.54,0.52,2.50)
theta2 <- seq(from=-pi,to=pi,length.out = 1000)
sourceCpp('q2-2.cpp')
###################
##(a)Graph the plot
llfunction2 <- function(theta, data){
return(sum(log((1-cos(data-theta))/(2*pi))))
}
ll_result2 <- sapply(theta2, llfunction2, data=data2)
plot(theta2, ll_result2, type='l', ylab='log likelihood', xlab=expression(theta))
###################
##(b)MoM Estimator
mom <- asin(pi-mean(data2))
###################
##(b)MoM Estimator
asin(pi-mean(data2))
###################
##(c)MLE
theta2[which.max(ll_result2)]
newton2(mom, 10e-5, data2, max_iter = 1000)
newton2(-2.7, 10e-5, data2, max_iter= 1000)
newton2(2.7, 10e-5, data2, max_iter= 1000)
###################
##(d)local mode
theta3 <- seq(from=-pi, to=pi, length.out=200)
local_mode <- c()
num=0
for (i in theta3){
num=num+1
local_mode[num]<-round(newton2(i, 10e-5, data2, max_iter = 1000),5)
}
local_mode.df <- cbind(theta3, local_mode)
length(unique(local_mode))
###################
##(e)Comparison between two nearly equal starting values
theta2[which.min(ll_result2)]
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
newton2(x=2.279935+0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
#######################
##추가숙제 1
#######################
###################
sourceCpp("q2-0.cpp")
#######################
##추가숙제 1
#######################
###################
sourceCpp("q2-0.cpp")
#######################
##추가숙제 1
#######################
###################
sourceCpp("q2-3.cpp")
newton3(0.1, 10e-8, 10000)
secant(0.5,1,10e-8,10000)
secant3(0.5,1,10e-8,10000)
bisection3(1,5,10e-8,10000)
bisec3(1,5,10e-8,10000)
fixed3(0.1,1,10e-8,10000)
fixed3(0.1,0.7,10e-8,10000)
newton3(0.1, 10e-8,10000)
secant3(0.5,1,10e-8,10000)
bisec3(1,5,10e-8,10000)
fixed3(0.1,0.7,10e-8,10000)
newton3(2, 10e-8,10000)
secant3(2,3,10e-8,10000)
bisec3(2,4,10e-8,10000)
fixed3(2,0.7,10e-8,10000)
newton3(2, 10e-8,10000)
secant3(2,3,10e-8,10000)
bisec3(2,4,10e-8,10000)
fixed3(2,0.7,10e-8,10000)
library(Rcpp)
library(RcppArmadillo)
library(rstudioapi)
library(microbenchmark)
library(ggplot2)
#######################
##Problem 2.2
#######################
###################
##Dataset 설정
data2 = c(3.91,4.85,2.28,4.06,3.70,4.04,5.46,3.53,2.28,1.96,2.53,3.88,2.22,3.47,4.82,2.46,2.99,
2.54,0.52,2.50)
theta2 <- seq(from=-pi,to=pi,length.out = 1000)
sourceCpp('q2-2.cpp')
###################
##(a)Graph the plot
llfunction2 <- function(theta, data){
return(sum(log((1-cos(data-theta))/(2*pi))))
}
ll_result2 <- sapply(theta2, llfunction2, data=data2)
plot(theta2, ll_result2, type='l', ylab='log likelihood', xlab=expression(theta))
###################
##(b)MoM Estimator
asin(pi-mean(data2))
mom <- asin(pi-mean(data2))
###################
##(c)MLE
theta2[which.max(ll_result2)]
newton2(mom, 10e-5, data2, max_iter = 1000)
newton2(-2.7, 10e-5, data2, max_iter= 1000)
newton2(2.7, 10e-5, data2, max_iter= 1000)
###################
##(d)local mode
theta3 <- seq(from=-pi, to=pi, length.out=200)
local_mode <- c()
num=0
for (i in theta3){
num=num+1
local_mode[num]<-round(newton2(i, 10e-5, data2, max_iter = 1000),5)
}
local_mode.df <- cbind(theta3, local_mode)
length(unique(local_mode))
###################
##(e)Comparison between two nearly equal starting values
theta2[which.min(ll_result2)]
newton2(x=2.279935-0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
newton2(x=2.279935+0.0001, epsilon = 0.0001, data = data2, max_iter = 1000)
#######################
##Problem 2.2
#######################
###################
##Dataset 설정
data2 = c(3.91,4.85,2.28,4.06,3.70,4.04,5.46,3.53,2.28,1.96,2.53,3.88,2.22,3.47,4.82,2.46,2.99,
2.54,0.52,2.50)
theta2 <- seq(from=-pi,to=pi,length.out = 1000)
sourceCpp('q2-2.cpp')
rm(list=ls())
library(Rcpp)
library(RcppArmadillo)
library(rstudioapi)
library(microbenchmark)
library(ggplot2)
#######################
##Problem 2.2
#######################
###################
##Dataset 설정
data2 = c(3.91,4.85,2.28,4.06,3.70,4.04,5.46,3.53,2.28,1.96,2.53,3.88,2.22,3.47,4.82,2.46,2.99,
2.54,0.52,2.50)
theta2 <- seq(from=-pi,to=pi,length.out = 1000)
sourceCpp('q2-2.cpp')
###################
##(a)Graph the plot
llfunction2 <- function(theta, data){
return(sum(log((1-cos(data-theta))/(2*pi))))
}
ll_result2 <- sapply(theta2, llfunction2, data=data2)
plot(theta2, ll_result2, type='l', ylab='log likelihood', xlab=expression(theta))
###################
##(b)MoM Estimator
asin(mean(data2)-pi)
mom <- asin(mean(data2)-pi)
###################
##(c)MLE
theta2[which.max(ll_result2)]
newton2(mom, 10e-5, data2, max_iter = 1000)
newton2(-2.7, 10e-5, data2, max_iter= 1000)
newton2(2.7, 10e-5, data2, max_iter= 1000)
print('한글글')
print('한글')
