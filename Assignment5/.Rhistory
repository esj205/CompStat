getwd()
# 9.4.a
fish = read.table('salmon.dat',header = TRUE)
colnames(fish)= c("YEAR","R","S")
fish
# Simple Linear Regression:
# 1/R = Beta1+Beta2*(1/S)
x= 1/fish$S
y= 1/fish$R
model = lm(y~x)
model.res= resid(model)
len= length(model.res)
yhat= predict(model)
# 1) Bootstraping Residuals
set.seed(2016171017)
itr = 10
eps = matrix(0,len,itr)
Bhat= matrix(0,2,itr)
yhats= matrix(0,len,itr)
for(i in 1:itr){
eps.new= model.res[sample(1:len, len, replace=T)] # Bootstrap residuals
y.new = eps.new+yhat # Create a Bootstrap Set
run.model = lm(y.new~x) # Regress new Y on X, to estimate new Beta
eps[,i]= eps.new
yhats[,i]= y.new
Bhat[1,i]= run.model$coefficients[1]
Bhat[2,i]= run.model$coefficients[2]
}
eps
yhats
Bhat
win.graph()
hist(eps, breaks=40)
newR = 1/yhats ; hist(newR, breaks=40)
#9.4
#dataset
fish <- read.table('salmon.dat', header=TRUE)
#9.4
set.seed(123)
#dataset
fish <- read.table('salmon.dat', header=TRUE)
View(fish)
#Regression Fitting
x <- 1/fish$spawners
y <- 1/fish$recruits
df <- data.frame(x=x, y=y)
rlm <- lm(y ~ x, data = df)
error <- rlm$residuals
y_hat <- rlm$fitted.values
y_hat
1/y_hat
View(df)
1/y
#Bootstrapping the residuals
itr <- 1000
new_error <- c()
rm(new_error)
len <- length(y_hat)
#point estimate
#R=s=(1-beta2)/beta1
rlm$coefficients
#point estimate
#R=s=(1-beta2)/beta1
rlm$coefficients[2]
#point estimate
#R=s=(1-beta2)/beta1
rlm$coefficients[,2]
#point estimate
#R=s=(1-beta2)/beta1
rlm$coefficients[2,]
#point estimate
#R=s=(1-beta2)/beta1
point_est = (1-rlm$coefficients[2])/rlm$coefficients[1]
point_est
est_list1 <- c()
for(i in 1:itr){
new_error <- error[sample(1:len,len, replace=T)]
new_y <- y_hat + new_error
new_df <- data.frame(x=x, y=new_y)
lm_res <- lm(y ~ x, data=new_df)
est_list1[i] <- (1-lm_res$coefficients[2])/lm_res$coefficients[1]
}
hist(est_list1)
help('hist')
hist(est_list1, ylab='Residual Bootstrap Point Estimates')
help('hist')
hist(est_list1, main='Residual Bootstrap Point Estimates')
hist(est_list1, main='Residual Bootstrap')
hist(est_list1, main='Residual Bootstrap', xlab='(1-beta2)/beta1')
Conf_res <- quantile(est_list1,c(0.025,0.975),na.rm=T)
Conf_res
sd(Conf_res)
##Bootstrapping the pairs
est_list2 <- c()
for(i in 1:itr){
new_x <- x[sample(1:len, len, replace = T)]
new_y <- y[sample(1:len, len, replace = T)]
new_df <- data.frame(x=new_x, y=new_y)
lm_pairs <- lm(y ~ x, data=new_df)
est_list2[i] <- (1-lm_pairs$coefficients[2])/lm_pairs$coefficients[1]
}
conf_pairs <- quantile(est_list2, c(0.025, 0.975), na.rm=T)
sd(conf_pairs)
hist(est_list2, main='Pairs Bootstrap', xlab='(1-beta2)/beta1')
###############
##9.4
###############
set.seed(123)
##dataset
fish <- read.table('salmon.dat', header=TRUE)
##Regression Fitting
x <- 1/fish$spawners
y <- 1/fish$recruits
df <- data.frame(x=x, y=y)
rlm <- lm(y ~ x, data = df)
#point estimate
#R=s=(1-beta2)/beta1
point_est = (1-rlm$coefficients[2])/rlm$coefficients[1]
point_est
##Bootstrapping the residuals
error <- rlm$residuals
y_hat <- rlm$fitted.values
itr <- 1000
len <- length(y_hat)
est_list1 <- c()
for(i in 1:itr){
new_error <- error[sample(1:len,len, replace=T)]
new_y <- y_hat + new_error
new_df <- data.frame(x=x, y=new_y)
lm_res <- lm(y ~ x, data=new_df)
est_list1[i] <- (1-lm_res$coefficients[2])/lm_res$coefficients[1]
}
Conf_res <- quantile(est_list1,c(0.025,0.975),na.rm=T)
sd(Conf_res)
hist(est_list1, main='Residual Bootstrap', xlab='(1-beta2)/beta1')
##Bootstrapping the pairs
est_list2 <- c()
for(i in 1:itr){
new_x <- x[sample(1:len, len, replace = T)]
new_y <- y[sample(1:len, len, replace = T)]
new_df <- data.frame(x=new_x, y=new_y)
lm_pairs <- lm(y ~ x, data=new_df)
est_list2[i] <- (1-lm_pairs$coefficients[2])/lm_pairs$coefficients[1]
}
conf_pairs <- quantile(est_list2, c(0.025, 0.975), na.rm=T)
sd(conf_pairs)
hist(est_list2, main='Pairs Bootstrap', xlab='(1-beta2)/beta1')
sd(est_list2)
sd(est_list1)
conf_res
conf_res <- quantile(est_list1,c(0.025,0.975),na.rm=T)
conf_res
conf_pairs
mean(est_list1)
mean(est_list2)
###############
##9.4
###############
set.seed(123)
##dataset
fish <- read.table('salmon.dat', header=TRUE)
##Regression Fitting
x <- 1/fish$spawners
y <- 1/fish$recruits
df <- data.frame(x=x, y=y)
rlm <- lm(y ~ x, data = df)
#point estimate
#R=s=(1-beta2)/beta1
point_est = (1-rlm$coefficients[2])/rlm$coefficients[1]
point_est
##Bootstrapping the residuals
error <- rlm$residuals
y_hat <- rlm$fitted.values
itr <- 10000
len <- length(y_hat)
est_list1 <- c()
for(i in 1:itr){
new_error <- error[sample(1:len,len, replace=T)]
new_y <- y_hat + new_error
new_df <- data.frame(x=x, y=new_y)
lm_res <- lm(y ~ x, data=new_df)
est_list1[i] <- (1-lm_res$coefficients[2])/lm_res$coefficients[1]
}
conf_res <- quantile(est_list1,c(0.025,0.975),na.rm=T)
sd(est_list1)
hist(est_list1, main='Residual Bootstrap', xlab='(1-beta2)/beta1')
##Bootstrapping the pairs
est_list2 <- c()
for(i in 1:itr){
new_x <- x[sample(1:len, len, replace = T)]
new_y <- y[sample(1:len, len, replace = T)]
new_df <- data.frame(x=new_x, y=new_y)
lm_pairs <- lm(y ~ x, data=new_df)
est_list2[i] <- (1-lm_pairs$coefficients[2])/lm_pairs$coefficients[1]
}
conf_pairs <- quantile(est_list2, c(0.025, 0.975), na.rm=T)
sd(est_list2)
hist(est_list2, main='Pairs Bootstrap', xlab='(1-beta2)/beta1')
conf_res
conf_pairs
mean(est_list1)
mean(est_list2)
###############
##9.4
###############
set.seed(1234)
##dataset
fish <- read.table('salmon.dat', header=TRUE)
##Regression Fitting
x <- 1/fish$spawners
y <- 1/fish$recruits
df <- data.frame(x=x, y=y)
rlm <- lm(y ~ x, data = df)
#point estimate
#R=s=(1-beta2)/beta1
point_est = (1-rlm$coefficients[2])/rlm$coefficients[1]
point_est
##Bootstrapping the residuals
error <- rlm$residuals
y_hat <- rlm$fitted.values
itr <- 10000
len <- length(y_hat)
est_list1 <- c()
for(i in 1:itr){
new_error <- error[sample(1:len,len, replace=T)]
new_y <- y_hat + new_error
new_df <- data.frame(x=x, y=new_y)
lm_res <- lm(y ~ x, data=new_df)
est_list1[i] <- (1-lm_res$coefficients[2])/lm_res$coefficients[1]
}
conf_res <- quantile(est_list1,c(0.025,0.975),na.rm=T)
sd(est_list1)
hist(est_list1, main='Residual Bootstrap', xlab='(1-beta2)/beta1')
##Bootstrapping the pairs
est_list2 <- c()
for(i in 1:itr){
new_x <- x[sample(1:len, len, replace = T)]
new_y <- y[sample(1:len, len, replace = T)]
new_df <- data.frame(x=new_x, y=new_y)
lm_pairs <- lm(y ~ x, data=new_df)
est_list2[i] <- (1-lm_pairs$coefficients[2])/lm_pairs$coefficients[1]
}
conf_pairs <- quantile(est_list2, c(0.025, 0.975), na.rm=T)
sd(est_list2)
hist(est_list2, main='Pairs Bootstrap', xlab='(1-beta2)/beta1')
conf_res
conf_pairs
mean(est_list1)
mean(est_list2)
###############
##9.4
###############
set.seed(1234)
##dataset
fish <- read.table('salmon.dat', header=TRUE)
##Regression Fitting
x <- 1/fish$spawners
y <- 1/fish$recruits
df <- data.frame(x=x, y=y)
rlm <- lm(y ~ x, data = df)
#point estimate
#R=s=(1-beta2)/beta1
point_est = (1-rlm$coefficients[2])/rlm$coefficients[1]
point_est
##Bootstrapping the residuals
error <- rlm$residuals
y_hat <- rlm$fitted.values
itr <- 10000
len <- length(y_hat)
est_list1 <- c()
for(i in 1:itr){
new_error <- error[sample(1:len,len, replace=T)]
new_y <- y_hat + new_error
new_df <- data.frame(x=x, y=new_y)
lm_res <- lm(y ~ x, data=new_df)
est_list1[i] <- (1-lm_res$coefficients[2])/lm_res$coefficients[1]
}
conf_res <- quantile(est_list1,c(0.025,0.975),na.rm=T)
sd(est_list1)
hist(est_list1, main='Residual Bootstrap', xlab='(1-beta2)/beta1')
##Bootstrapping the pairs
est_list2 <- c()
for(i in 1:itr){
ind <- sample(1:len, len, replace=T)
new_x <- x[ind]
new_y <- y[ind]
new_df <- data.frame(x=new_x, y=new_y)
lm_pairs <- lm(y ~ x, data=new_df)
est_list2[i] <- (1-lm_pairs$coefficients[2])/lm_pairs$coefficients[1]
}
conf_pairs <- quantile(est_list2, c(0.025, 0.975), na.rm=T)
sd(est_list2)
hist(est_list2, main='Pairs Bootstrap', xlab='(1-beta2)/beta1')
conf_res
conf_pairs
mean(est_list1)
mean(est_list2)
sd(est_list1)
sd(est_list2)
